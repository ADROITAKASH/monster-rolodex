{"version":3,"sources":["components/cardContainer/cardContainer.js","components/cardList/cardList.js","components/search/search.js","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","onchange","type","onChange","App","state","search","fetch","then","response","json","user","setState","this","filterdMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,G,YAAc,SAACC,GAAD,OACvB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,UAHmBP,EAAMI,QAAQC,MCA1CG,EAAS,SAACR,GAAD,OAClB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAeA,QAASA,UCJnBO,G,MAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,SAAd,OAChB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EACrDG,SAAUF,MC2BEG,G,wDA1Bd,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAS,GACTS,OAAO,IAJE,E,gEAQO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACf,SAASc,S,+BAG7B,IAAD,SACkBE,KAAKR,MAAtBR,EADD,EACCA,SAASS,EADV,EACUA,OACVQ,EAAkBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAGA,EAAQE,KAAKsB,cAAcC,SAASX,EAAOU,kBAC7F,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQW,YAAY,kBAAkBC,SAAU,SAACiB,GAAD,OAAM,EAAKN,SAAS,CAACN,OAAOY,EAAEC,OAAOC,WACrF,cAAC,EAAD,CAAUvB,SAAUiB,W,GArBVO,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.3bbf3bb9.chunk.js","sourcesContent":["import React from 'react';\nimport './cardContainer.css';\n\nexport const CardContainer=(props)=>(\n    <div className='card-container' key={props.monster.id}>\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}/>\n    <h1>{props.monster.name}</h1>\n    <p>{props.monster.email}</p>\n    </div>\n);","import React from 'react';\nimport './cardList.css';\nimport {CardContainer} from '../cardContainer/cardContainer';\n\nexport const CardList=(props)=>(\n    <div className='card-list'>\n    {props.monsters.map(monster=>(\n        <CardContainer monster={monster}></CardContainer>\n        // <div key={monster.id}>{monster.name}</div>\n    ))}\n    </div>\n);","import React from 'react';\nimport \"./search.css\";\n\nexport const Search=({placeholder,onchange})=>(\n    <input className='search' type='search' placeholder={placeholder}\n    onChange={onchange}></input>\n)\n        // <input placeholder='search monster' onChange={(e)=>(this.setState({search:e.target.value}))}></input>","import React from 'react';\nimport {CardList} from './components/cardList/cardList';\nimport {Search} from './components/search/search'\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      search:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(user=>this.setState({monsters:user}))\n  }\n\n  render(){\n    const {monsters,search}=this.state;\n    const filterdMonsters = monsters.filter(monster=>(monster.name.toLowerCase().includes(search.toLowerCase())));\n    return(\n      <div className='App'>\n        <Search placeholder='search monsters' onchange={(e)=>(this.setState({search:e.target.value}))}></Search>\n        <CardList monsters={filterdMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default  App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}